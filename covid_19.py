# -*- coding: utf-8 -*-
"""COVID-19.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q6Vt1CjdEK2ignwMr-xuWCXs7OLkiomt

#**COVID-19 Analysis and Visualization**

It is unreal to think about how the virus started spreading from one individual that is patient zero to four million today. It was made possible due to the transport system. We didn't have even a fraction of the transportation system we have today back in the days.

Well, as much good as you can do for now is sanitize your grocery items and keep them idle for a day or two. Till we have a vaccine that could be years ahead of us, social distancing in public is the only way to slow down the number of cases. Make sure you take vitamin C in the form of extra tablets or the food form. Well, it's not going to stop you from getting corona, but at least if you do get infected, your immunity is going to be higher than the guy who didn't take it to combat the virus. The last thing you can do is replace your handshakes with Namaste.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

"""### Initializing Dataset

Importing Dataset on Covid-19 India case time series
"""

cases=pd.read_csv('/content/case_time_series (2).csv')
cases.head()

District = pd.read_csv('/content/district.csv')
District.head()

Test = pd.read_csv('/content/ICMRTestingLabsWithCoords.csv')
Test.head()

cases.info()

District.info()

Test.info()

cases.describe()

District.describe()

Test.describe()

cases.duplicated().sum()

Test.duplicated().sum()

District.duplicated().sum()

Y = cases.iloc[61:,1].values #Stores Daily Confirmed
R = Test.iloc[61:,3].values #Stores Daily Recovered
D = District.iloc[61:,5].values #Stores Daily Deceased

X = cases.iloc[61:,0] #Stores Date

"""# COVID-19 Daily Confirmed Cases Visualization in India"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv('/content/case_time_series (2).csv')

Y = data.iloc[61:,1].values
R = data.iloc[61:,3].values
D = data.iloc[61:,5].values
X = data.iloc[61:,0]

plt.figure(figsize=(25,8))

ax = plt.axes()
ax.grid(linewidth=0.4, color='#8f8f8f')

ax.set_facecolor("black")
ax.set_xlabel('\nDate',size=25,color='#4bb4f2')
ax.set_ylabel('Number of Confirmed Cases\n',
			size=25,color='#4bb4f2')

plt.xticks(rotation='vertical',size='20',color='white')
plt.yticks(size=20,color='white')
plt.tick_params(size=20,color='white')

for i,j in zip(X,Y):
	ax.annotate(str(j),xy=(i,j+100),color='white',size='13')

ax.annotate('Second Lockdown 15th April',
			xy=(15.2, 860),
			xytext=(19.9,500),
			color='white',
			size='25',
			arrowprops=dict(color='white',
							linewidth=0.025))

plt.title("COVID-19 IN : Daily Confirmed\n",
		size=50,color='#28a9ff')

ax.plot(X,Y,
		color='#1F77B4',
		marker='o',
		linewidth=4,
		markersize=15,
		markeredgecolor='#035E9B')

"""# Modes of COVID-19 Transmission Distribution"""

slices = [30, 60, 90]
activities = ['Travel', 'Place Visit', 'Unknown']

cols=['#4C8BE2','#00e061','#fe073a']
exp = [0.2,0.02,0.02]

plt.pie(slices,labels=activities,
		textprops=dict(size=25,color='black'),
		radius=3,
		colors=cols,
		autopct='%2.2f%%',
		explode=exp,
		shadow=True,
		startangle=90)

plt.title('Transmission\n\n\n\n',color='#4fb4f2',size=40)

"""# COVID-19 Cases Across Maharashtra Districts"""

data = pd.read_csv('district.csv')
data.head()

re=data.iloc[:30,5].values
de=data.iloc[:30,4].values
co=data.iloc[:30,3].values
x=list(data.iloc[:30,0])

plt.figure(figsize=(25,10))
ax=plt.axes()

ax.set_facecolor('black')
ax.grid(linewidth=0.4, color='#8f8f8f')


plt.xticks(rotation='vertical',
		size='20',
		color='white')#ticks of X

plt.yticks(size='20',color='white')


ax.set_xlabel('\nDistrict',size=25,
			color='#4bb4f2')
ax.set_ylabel('No. of cases\n',size=25,
			color='#4bb4f2')


plt.tick_params(size=20,color='white')


ax.set_title('Maharashtra District wise breakdown\n',
			size=50,color='#28a9ff')

plt.bar(x,co,label='re')
plt.bar(x,re,label='re',color='green')
plt.bar(x,de,label='re',color='red')

for i,j in zip(x,co):
	ax.annotate(str(int(j)),
				xy=(i,j+3),
				color='white',
				size='15')

plt.legend(['Confirmed','Recovered','Deceased'],
		fontsize=20)

"""Conclusion:
The bar chart provides a district-wise breakdown of COVID-19 cases in Maharashtra, highlighting the number of confirmed, recovered, and deceased cases. The visualization effectively distinguishes different case categories using color-coded bars and annotations for clarity.


*   The highest number of cases are seen in specific districts.
*   The death count remains a crucial metric to monitor, indicating the severity of outbreaks in certain regions.

*  The recovery rate varies across districts, with some areas showing a significant number of recoveries.


This analysis helps in understanding regional trends and can guide policy decisions and resource allocation for pandemic management. ðŸš€
"""